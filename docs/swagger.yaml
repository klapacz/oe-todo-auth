consumes:
- application/json
definitions:
  Credentials:
    description: |-
      func CheckPasswordHash(password, hash string) bool {
      err := bcrypt.CompareHashAndPassword([]byte(hash), []byte(password))
      return err == nil
      }
    properties:
      password:
        type: string
        x-go-name: Password
      username:
        example: user@example.com
        type: string
        x-go-name: Username
    type: object
    x-go-package: github.com/klapacz/oe-todo-auth/controllers
info:
  contact:
    email: lapacz.kornel@gmail.com
    name: Korneliusz ≈Åapacz
    url: http://klapacz.dev
  description: Manages authorization.
  license:
    name: MIT
    url: http://opensource.org/licenses/MIT
  title: oe-todo auth API
  version: 0.1.0
paths:
  /access-token:
    post:
      operationId: login
      parameters:
      - in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/Credentials'
      responses:
        "200":
          $ref: '#/responses/loginResponseOK'
        "401":
          $ref: '#/responses/GenericError'
        "422":
          $ref: '#/responses/GenericError'
      tags:
      - auth
  /ping:
    get:
      operationId: Ping
produces:
- application/json
responses:
  GenericError:
    description: ""
    schema:
      properties:
        error:
          type: string
          x-go-name: Error
      type: object
  loginResponseOK:
    description: ""
    schema:
      properties:
        accessToken:
          type: string
          x-go-name: AccessToken
      type: object
schemes:
- http
- https
swagger: "2.0"
